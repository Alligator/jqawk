// Code generated by "stringer -type=TokenTag -linecomment"; DO NOT EDIT.

package lang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[Ident-2]
	_ = x[Str-3]
	_ = x[Regex-4]
	_ = x[Num-5]
	_ = x[Begin-6]
	_ = x[End-7]
	_ = x[Print-8]
	_ = x[Function-9]
	_ = x[Return-10]
	_ = x[LCurly-11]
	_ = x[RCurly-12]
	_ = x[LSquare-13]
	_ = x[RSquare-14]
	_ = x[LParen-15]
	_ = x[RParen-16]
	_ = x[LessThan-17]
	_ = x[GreaterThan-18]
	_ = x[Dollar-19]
	_ = x[Comma-20]
	_ = x[Dot-21]
	_ = x[Equal-22]
	_ = x[EqualEqual-23]
	_ = x[BangEqual-24]
	_ = x[LessEqual-25]
	_ = x[GreaterEqual-26]
	_ = x[SemiColon-27]
	_ = x[Plus-28]
	_ = x[Minus-29]
	_ = x[Multiply-30]
	_ = x[Divide-31]
	_ = x[PlusEqual-32]
	_ = x[MinusEqual-33]
	_ = x[MultiplyEqual-34]
	_ = x[DivideEqual-35]
	_ = x[Tilde-36]
	_ = x[BangTilde-37]
	_ = x[AmpAmp-38]
	_ = x[PipePipe-39]
}

const _TokenTag_name = "EOFErrorIdentStrRegexNumBeginEndPrintFunctionReturn{}[]()<>$,.===!=<=>=;+-*/+=-=*=/=~!~&&||"

var _TokenTag_index = [...]uint8{0, 3, 8, 13, 16, 21, 24, 29, 32, 37, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 71, 72, 73, 74, 75, 76, 78, 80, 82, 84, 85, 87, 89, 91}

func (i TokenTag) String() string {
	if i >= TokenTag(len(_TokenTag_index)-1) {
		return "TokenTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenTag_name[_TokenTag_index[i]:_TokenTag_index[i+1]]
}
