// Code generated by "stringer -type=TokenTag -linecomment"; DO NOT EDIT.

package lang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[Ident-2]
	_ = x[Str-3]
	_ = x[Regex-4]
	_ = x[Num-5]
	_ = x[Begin-6]
	_ = x[End-7]
	_ = x[Print-8]
	_ = x[Function-9]
	_ = x[Return-10]
	_ = x[If-11]
	_ = x[Else-12]
	_ = x[For-13]
	_ = x[While-14]
	_ = x[In-15]
	_ = x[Match-16]
	_ = x[Break-17]
	_ = x[Continue-18]
	_ = x[Next-19]
	_ = x[True-20]
	_ = x[False-21]
	_ = x[LCurly-22]
	_ = x[RCurly-23]
	_ = x[LSquare-24]
	_ = x[RSquare-25]
	_ = x[LParen-26]
	_ = x[RParen-27]
	_ = x[LessThan-28]
	_ = x[GreaterThan-29]
	_ = x[Dollar-30]
	_ = x[Comma-31]
	_ = x[Dot-32]
	_ = x[Equal-33]
	_ = x[EqualEqual-34]
	_ = x[BangEqual-35]
	_ = x[LessEqual-36]
	_ = x[GreaterEqual-37]
	_ = x[Colon-38]
	_ = x[SemiColon-39]
	_ = x[Plus-40]
	_ = x[Minus-41]
	_ = x[Multiply-42]
	_ = x[Divide-43]
	_ = x[PlusEqual-44]
	_ = x[MinusEqual-45]
	_ = x[MultiplyEqual-46]
	_ = x[DivideEqual-47]
	_ = x[Tilde-48]
	_ = x[BangTilde-49]
	_ = x[AmpAmp-50]
	_ = x[PipePipe-51]
	_ = x[Arrow-52]
	_ = x[Bang-53]
	_ = x[PlusPlus-54]
	_ = x[MinusMinus-55]
	_ = x[Percent-56]
}

const _TokenTag_name = "EOFErrorIdentStrRegexNumBeginEndPrintFunctionReturnIfElseForWhileInMatchBreakContinueNexttruefalse{}[]()<>$,.===!=<=>=:;+-*/+=-=*=/=~!~&&||=>!++--%"

var _TokenTag_index = [...]uint8{0, 3, 8, 13, 16, 21, 24, 29, 32, 37, 45, 51, 53, 57, 60, 65, 67, 72, 77, 85, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 132, 133, 135, 137, 139, 141, 142, 144, 146, 147}

func (i TokenTag) String() string {
	if i >= TokenTag(len(_TokenTag_index)-1) {
		return "TokenTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenTag_name[_TokenTag_index[i]:_TokenTag_index[i+1]]
}
