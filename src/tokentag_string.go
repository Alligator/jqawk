// Code generated by "stringer -type=TokenTag -linecomment"; DO NOT EDIT.

package lang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[Ident-2]
	_ = x[Str-3]
	_ = x[Regex-4]
	_ = x[Num-5]
	_ = x[Begin-6]
	_ = x[End-7]
	_ = x[Print-8]
	_ = x[Function-9]
	_ = x[Return-10]
	_ = x[If-11]
	_ = x[LCurly-12]
	_ = x[RCurly-13]
	_ = x[LSquare-14]
	_ = x[RSquare-15]
	_ = x[LParen-16]
	_ = x[RParen-17]
	_ = x[LessThan-18]
	_ = x[GreaterThan-19]
	_ = x[Dollar-20]
	_ = x[Comma-21]
	_ = x[Dot-22]
	_ = x[Equal-23]
	_ = x[EqualEqual-24]
	_ = x[BangEqual-25]
	_ = x[LessEqual-26]
	_ = x[GreaterEqual-27]
	_ = x[SemiColon-28]
	_ = x[Plus-29]
	_ = x[Minus-30]
	_ = x[Multiply-31]
	_ = x[Divide-32]
	_ = x[PlusEqual-33]
	_ = x[MinusEqual-34]
	_ = x[MultiplyEqual-35]
	_ = x[DivideEqual-36]
	_ = x[Tilde-37]
	_ = x[BangTilde-38]
	_ = x[AmpAmp-39]
	_ = x[PipePipe-40]
}

const _TokenTag_name = "EOFErrorIdentStrRegexNumBeginEndPrintFunctionReturnIf{}[]()<>$,.===!=<=>=;+-*/+=-=*=/=~!~&&||"

var _TokenTag_index = [...]uint8{0, 3, 8, 13, 16, 21, 24, 29, 32, 37, 45, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 71, 73, 74, 75, 76, 77, 78, 80, 82, 84, 86, 87, 89, 91, 93}

func (i TokenTag) String() string {
	if i >= TokenTag(len(_TokenTag_index)-1) {
		return "TokenTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenTag_name[_TokenTag_index[i]:_TokenTag_index[i+1]]
}
