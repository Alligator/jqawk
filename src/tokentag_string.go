// Code generated by "stringer -type=TokenTag -linecomment"; DO NOT EDIT.

package lang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[Ident-2]
	_ = x[Str-3]
	_ = x[Regex-4]
	_ = x[Num-5]
	_ = x[Begin-6]
	_ = x[End-7]
	_ = x[Print-8]
	_ = x[Function-9]
	_ = x[Return-10]
	_ = x[If-11]
	_ = x[Else-12]
	_ = x[For-13]
	_ = x[While-14]
	_ = x[In-15]
	_ = x[Match-16]
	_ = x[Break-17]
	_ = x[Continue-18]
	_ = x[Next-19]
	_ = x[Newline-20]
	_ = x[True-21]
	_ = x[False-22]
	_ = x[LCurly-23]
	_ = x[RCurly-24]
	_ = x[LSquare-25]
	_ = x[RSquare-26]
	_ = x[LParen-27]
	_ = x[RParen-28]
	_ = x[LessThan-29]
	_ = x[GreaterThan-30]
	_ = x[Dollar-31]
	_ = x[Comma-32]
	_ = x[Dot-33]
	_ = x[Equal-34]
	_ = x[EqualEqual-35]
	_ = x[BangEqual-36]
	_ = x[LessEqual-37]
	_ = x[GreaterEqual-38]
	_ = x[Colon-39]
	_ = x[SemiColon-40]
	_ = x[Plus-41]
	_ = x[Minus-42]
	_ = x[Multiply-43]
	_ = x[Divide-44]
	_ = x[PlusEqual-45]
	_ = x[MinusEqual-46]
	_ = x[MultiplyEqual-47]
	_ = x[DivideEqual-48]
	_ = x[Tilde-49]
	_ = x[BangTilde-50]
	_ = x[AmpAmp-51]
	_ = x[PipePipe-52]
	_ = x[Arrow-53]
	_ = x[Bang-54]
	_ = x[PlusPlus-55]
	_ = x[MinusMinus-56]
	_ = x[Percent-57]
}

const _TokenTag_name = "EOFErrorIdentStrRegexNumBeginEndPrintFunctionReturnIfElseForWhileInMatchBreakContinueNextNewlinetruefalse{}[]()<>$,.===!=<=>=:;+-*/+=-=*=/=~!~&&||=>!++--%"

var _TokenTag_index = [...]uint8{0, 3, 8, 13, 16, 21, 24, 29, 32, 37, 45, 51, 53, 57, 60, 65, 67, 72, 77, 85, 89, 96, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 137, 139, 140, 142, 144, 146, 148, 149, 151, 153, 154}

func (i TokenTag) String() string {
	if i >= TokenTag(len(_TokenTag_index)-1) {
		return "TokenTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenTag_name[_TokenTag_index[i]:_TokenTag_index[i+1]]
}
