// Code generated by "stringer -type=TokenTag -linecomment"; DO NOT EDIT.

package lang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[Ident-2]
	_ = x[Str-3]
	_ = x[Num-4]
	_ = x[Begin-5]
	_ = x[End-6]
	_ = x[Print-7]
	_ = x[LCurly-8]
	_ = x[RCurly-9]
	_ = x[LSquare-10]
	_ = x[RSquare-11]
	_ = x[LessThan-12]
	_ = x[GreaterThan-13]
	_ = x[Dollar-14]
	_ = x[Comma-15]
	_ = x[Dot-16]
	_ = x[Equal-17]
	_ = x[EqualEqual-18]
	_ = x[SemiColon-19]
}

const _TokenTag_name = "EOFErrorIdentStrNumBeginEndPrint{}[]<>$,.===;"

var _TokenTag_index = [...]uint8{0, 3, 8, 13, 16, 19, 24, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45}

func (i TokenTag) String() string {
	if i >= TokenTag(len(_TokenTag_index)-1) {
		return "TokenTag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenTag_name[_TokenTag_index[i]:_TokenTag_index[i+1]]
}
